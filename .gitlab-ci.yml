services:
  - mariadb

stages:
  - build
  - test
  - deploy

rust-build:
  stage: build
  image: rust:latest
  script:
    - cd actix
    - export DATABASE_URL=mysql://root:pass@mariadb/cs3099user-b5_project
#    - apt-get install -y mariadb-client
    - mysql --user=root --password=pass -h mariadb --protocol=tcp cs3099user-b5_project < sql/schema.sql
    - cargo build --verbose
    - cargo test --verbose

node-build:
  stage: build
  image: node:current-buster
  script:
    - cd react-front-end
    - npm ci
    - npm run build

deploy_staging:
  type: deploy
  environment:
    name: staging

  script:
    - ssh -o "StrictHostKeyChecking=no" cs3099user-b5@cs3099user-b5.host.cs.st-andrews.ac.uk "cd Documents/project-code && git checkout master && git pull origin master && tmux kill-session -t 'deploy' &&tmux new-session -d -s 'deploy' './deploy.sh; exec $SHELL'"
  only:
    - master

before_script:
  - apt-get update -yq
  - apt-get install -o dir::cache::archives="$APT_CACHE_DIR" -y openssh-client mariadb-client
  #- 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - chmod 600 .ssh/id_rsa
  - ssh-add .ssh/id_rsa
  - mkdir -p .ssh
  - chmod 700 .ssh

variables:
    MYSQL_DATABASE: "cs3099user-b5_project"
    MYSQL_ROOT_PASSWORD: "pass"
    MYSQL_PASSWORD: "123"
    CARGO_HOME: $CI_PROJECT_DIR/actix/cargo
    APT_CACHE_DIR: $CI_PROJECT_DIR/apt
    
cache:
  paths:
    - actix/cargo/
    - actix/target/
    - apt/
    - $HOME/.npm